name: Deploy and OWASP ZAP Scan

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ap-south-1
  ECR_REPOSITORY: flask-ecr-repo
  ECS_CLUSTER: flask-ecs-cluster
  ECS_SERVICE: flask-ecs-task-service-cgbcu9wy
  ECS_TASK_DEFINITION: flask-ecs-task
  ECS_APP_URL: http://flask-alb-1032004274.ap-south-1.elb.amazonaws.com
jobs:
  deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image
        run: |
          IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI

      - name: Update ECS service
        run: |
          aws ecs update-service \
            --cluster ${{ env.ECS_CLUSTER }} \
            --service ${{ env.ECS_SERVICE }} \
            --force-new-deployment

  owasp-zap:
    name: Run OWASP ZAP Scan
    needs: deploy
    runs-on: ubuntu-latest

    steps:
      - name: Wait for service to be available
        run: |
          for i in {1..30}; do
            STATUS=$(curl -s -o /dev/null -w "%{http_code}" "${{ env.ECS_APP_URL }}/health")
            if [ "$STATUS" = "200" ]; then
              echo "Service is up!"
              break
            fi
            echo "Waiting for service... ($i)"
            sleep 10
          done

      - name: Run OWASP ZAP Scan
        run: |
          mkdir -p reports
          docker run --user root \
            -v $(pwd)/reports:/zap/wrk/:rw \
            ghcr.io/zaproxy/zaproxy:stable zap-full-scan.py \
            -t ${{ env.ECS_APP_URL }} \
            -r zap_report.html -w zap_report.md \
            -x zap_report.xml || true

      

      - name: Upload OWASP ZAP SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: reports/zap_report.xml

      - name: Upload OWASP ZAP Reports
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: reports/

      - name: GitHub Summary
        run: |
          echo "## OWASP ZAP Scan Completed" >> $GITHUB_STEP_SUMMARY
          echo "- HTML report, markdown summary, and SARIF uploaded." >> $GITHUB_STEP_SUMMARY
